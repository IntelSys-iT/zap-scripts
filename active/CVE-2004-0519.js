var RISK = 2 // 0: info, 1: low, 2: medium, 3: high
var CONFIDENCE = 3 // 0: falsePositive, 1: low, 2: medium, 3: high, 4: confirmed
var TITLE = "[CVE-2004-0519] SquirrelMail 1.4.x Folder Name Cross-Site Scripting"
var DESCRIPTION = "Multiple cross-site scripting (XSS) vulnerabilities in SquirrelMail 1.4.2 allow remote attackers to execute arbitrary script and possibly steal authentication information via multiple attack vectors, including the mailbox parameter in compose.php."
var SOLUTION = "Upgrade to the latest version."
var REFERENCE = "https://www.exploit-db.com/exploits/24068"
var OTHER = "see: http://www.securityfocus.com/archive/1/361857"

function scanNode(as, msg) {

	if (msg.getRequestHeader().getURI().getPath() == null ||
		msg.getRequestHeader().getURI().getPath().length() == 1) {

		// Copy requests before reusing them
		msg = msg.cloneRequest();

		msg.getRequestHeader().getURI().setPath("/mail/src/compose.php?mailbox=%3C%2Fscript%3E%3Cscript%3Ealert%28document.domain%29%3C%2Fscript%3E")

		print('[CVE-2004-0519] scan called for url=' + msg.getRequestHeader().getURI().toString());

		// sendAndReceive(msg, followRedirect, handleAntiCSRFtoken)
		as.sendAndReceive(msg, true, true);

		// Test the response here, and make other requests as required
		if (msg.getResponseHeader().getStatusCode() == 200 &&
			msg.getResponseBody().toString().contains("</script><script>alert(document.domain)</script>") &&
			msg.getResponseHeader().getHeader("Content-Type") == "text/html") {

			as.newAlert()
				.setRisk(RISK)
				.setConfidence(CONFIDENCE)
				.setName(TITLE)
				.setDescription(DESCRIPTION)
				.setEvidence(msg.getRequestHeader().getURI().toString())
				.setOtherInfo(OTHER)
				.setSolution(SOLUTION)
				.setReference(REFERENCE)
				.setMessage(msg)
				.raise()
		}
	}
	return
}

function scan(as, msg, param, value) {
	return
}
